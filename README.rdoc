= AdminInterface

A Rails admin interface generator for Rails 3.1+. Theme stolen from Redmine. Similar to web-app-theme.

== More info

Generator to create some nifty admin scaffolds. It can work with MetaSearch and Kaminari.
It also has admin authentication really well implemented.

== Install

=== Rails 3.1

You should be using v1.2.0+ of the Gem. Add the following to your Gemfile.

  gem 'admin_interface'

=== Earlier Rails Versions

If you're using Rails 3.0 or earlier use

Add following to your Gemfile

  gem "admin_interface", "~> 1.0.0"

Or install as plugin from Github.

  rails plugin install git://github.com/joost/admin_interface.git
  
== Usage / Example

=== Generate the initial framework (layout, etc.)

  rails generate admin_interface
  
This will:
* But some images (stolen from Redmine) into public/images/admin/
* Create an Admin::BaseController in app/controllers/admin/base_controller.rb
* Create a layout in app/views/layouts/admin.html.erb
* Add some jQuery javascripts and CSS

Next, add following routes to config/routes.rb.

  namespace :admin do
    root :to => 'base#index'
    # Add the following after you've used the admin_scaffold generator
    resources :model, :another_model do
      delete 'destroy_all', :on => :collection
    end
  end

Change the app/controllers/admin/base_controller.rb to have a before filter
only allowing admins to access it.

=== Generate admin models and controllers

Create a scaffold for a model, for example:

  rails generate admin_scaffold post
  rails generate admin_scaffold post title:string body:text published:boolean
  rails generate admin_scaffold purchase order_id:integer amount:decimal

This will:
* Create stuff similar to original Rails scaffold generator but for admin interface.
* NOT create model since you probably have it already.

Pass the name of the model (in singular form), either CamelCased or
under_scored, as the first argument, and an optional list of attribute
pairs.

Attribute pairs are column_name:sql_type arguments specifying the
model's attributes. Timestamps are added by default, so you don't have to
specify them by hand as 'created_at:datetime updated_at:datetime'.

=== Customize

You should customize your admin area so it can be more functional and nicely looking.

=== See it in action

Go to /admin and you can see everything in action.

== Screenshot

https://raw.github.com/joost/admin_interface/master/doc/screenshot.png

== Error messages

Add this to a initializer or in your environment.rb (see: http://railscasts.com/episodes/39-customize-field-error)
This will make sure the admin errors will show in correct styling.

  # Change the error from div to span
  ActionView::Base.field_error_proc = Proc.new do |html_tag, instance_tag|
    "<span class='field_with_errors'>#{html_tag}</span>".html_safe
  end

Note that this might affect the rest of your application. A different solution is
welcome!

== Kudos

Kudos, credits or whatever you like more go to:
* Jean-Philippe Lang (creator of {Redmine}[http://www.redmine.org/]).
  
Copyright (c) 2011 Joost Hietbrink, released under the MIT license